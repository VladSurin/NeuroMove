import torch.nn as nn
import torch

import torchvision.transforms.functional as TF

import numpy as np

from PIL import Image

class Model(nn.Module):
    def __init__(self, conv_drop=0.2, hid_size=128, layers=4, gru_drop=0.3, lin_drop=0.5):
        super().__init__()
        self.block1 = nn.Sequential(nn.Conv2d(1, 16, kernel_size=3, padding=1),
                                     nn.BatchNorm2d(16),
                                     nn.LeakyReLU(),
                                     nn.AdaptiveMaxPool2d((32, 32)))

        self.block2 = nn.Sequential(nn.Conv2d(16, 24, kernel_size=3, padding=1),
                                     nn.BatchNorm2d(24),
                                     nn.LeakyReLU(),
                                     nn.AdaptiveMaxPool2d((24, 24)))
        
        self.block3 = nn.Sequential(nn.Conv2d(24, 32, kernel_size=3, padding=1),
                                     nn.BatchNorm2d(32),
                                     nn.LeakyReLU(),
                                     nn.AdaptiveMaxPool2d((16, 16)))
        
        self.block4 = nn.Sequential(nn.Dropout2d(conv_drop),
                                     nn.Conv2d(32, 48, kernel_size=3, padding=1),
                                     nn.BatchNorm2d(48),
                                     nn.LeakyReLU(),
                                     nn.AdaptiveMaxPool2d((8, 8)))
        
        self.flat = nn.Flatten(2)
        self.dropout1 = nn.Dropout(lin_drop)
        self.linear1 = nn.Linear(48, 100)
        self.gru = nn.GRU(64, hid_size, num_layers=layers, batch_first=True, 
                          bidirectional=True, dropout=gru_drop)
        self.dropout2 = nn.Dropout(lin_drop)
        self.linear2 = nn.Linear(hid_size * 2, 2)
        self.tanh = nn.Tanh()

    def forward(self, x):
        x = self.block1(x)
        x = self.block2(x)
        x = self.block3(x)
        x = self.block4(x)

        x = self.flat(x)
        x = x.transpose(1, 2)
        x = self.linear1(self.dropout1(x))
        x = x.transpose(1, 2)
        x, _ = self.gru(x)
        x = self.linear2(self.dropout2(x))
        x = self.tanh(x)

        return x

def load_model(path='Model.pth'):
    model = Model()
    model.load_state_dict(torch.load(path))
    model.eval()
    return model

def img_threshold(img, thresh=150):
    """Get black and white image by threshold"""
    fn = lambda x : 255 if x > thresh else 0
    img = img.convert('L').point(fn, mode='1')
    return img

def get_prediction(model, img_data, size=(32, 32)):
    """Get a prediction from neural model

    Keyword arguments:
    model - Model
    img_data - numpy array
    size - tuple of two ints, width and height

    Returns:
    pred - numpy array, shape = (100, 2)
    """
    img = Image.fromarray(np.array(img_data, dtype=np.uint8).reshape(*size, 3))
    img = img_threshold(img)

    tensor = TF.to_tensor(img).unsqueeze(0)
    with torch.no_grad():
        pred = model(tensor)[0].numpy()
    return pred

# example
img_data = [-45, -50, -55, -29, -36, -41, -31, -34, -45, -31, -36, -42, -29, -35, -45, -30, -36, -46, -29, -37, -46, -29, -34, -43, -27, -34, -45, -27, -31, -39, -26, -33, -46, -26, -30, -40, -25, -31, -44, -28, -32, -42, -27, -33, -43, -27, -31, -37, -23, -32, -40, -25, -30, -42, -26, -29, -41, -25, -30, -41, -26, -32, -43, -26, -29, -42, -21, -31, -44, -29, -36, -51, -32, -40, -46, -29, -40, -49, -30, -37, -48, -28, -36, -46, -28, -34, -45, -30, -37, -46, 75, 75, 75, -27, -32, -46, -47, -53, -60, -33, -38, -46, -29, -36, -48, -29, -36, -44, -30, -36, -45, -32, -37, -43, -29, -37, -46, -28, -35, -46, -31, -36, -45, -27, -33, -40, -31, -36, -46, -26, -31, -40, -28, -32, -44, -28, -35, -45, -28, -34, -49, -27, -33, -42, -27, -33, -46, -28, -35, -44, -27, -33, -42, -27, -33, -39, -27, -31, -37, -26, -31, -37, -26, -31, -37, -26, -31, -41, -27, -33, -44, -28, -31, -47, -56, -64, -87, -33, -42, -51, -29, -34, -43, -30, -36, -46, 74, 74, 74, -26, -31, -35, -47, -54, -66, -33, -38, -46, -29, -37, -47, -29, -36, -46, -32, -37, -45, -30, -35, -46, -29, -34, -48, -28, -35, -48, -29, -36, -46, -27, -33, -41, -30, -35, -45, -28, -31, -41, -28, -31, -38, -28, -32, -42, -28, -32, -48, -27, -33, -45, -29, -35, -40, -30, -35, -44, -27, -32, -40, -26, -33, -39, -26, -33, -39, -25, -30, -38, -27, -32, -38, -27, -32, -42, -29, -32, -42, -28, -32, -43, -30, -32, -42, -28, -31, -43, -28, -33, -40, -28, -33, -41, -27, -30, -39, -25, -29, -39, -47, -52, -63, -31, -35, -41, -33, -37, -49, -30, -36, -45, -32, -37, -47, -29, -35, -43, -29, -35, -42, -27, -35, -41, -29, -36, -44, -25, -33, -41, -28, -34, -43, -26, -32, -38, -29, -35, -40, -26, -34, -46, -26, -34, -40, -25, -34, -42, -27, -33, -42, -29, -36, -45, -28, -32, -43, -28, -34, -46, -27, -35, -43, -28, -33, -39, -25, -33, -40, -27, -32, -42, -25, -33, -45, -32, -36, -49, -26, -33, -45, -29, -35, -44, -30, -34, -45, -26, -33, -41, -26, -31, -40, -26, -30, -41, -46, -54, -60, -27, -35, -46, -32, -36, -47, -29, -36, -46, -31, -36, -44, -30, -36, -43, -29, -36, -48, -30, -34, -48, -29, -35, -44, -30, -34, -40, -28, -34, -39, -31, -35, -41, -27, -35, -43, -31, -34, -45, -29, -33, -45, -29, -34, -41, -27, -36, -44, -28, -36, -48, -29, -34, -49, -31, -33, -45, -31, -33, -47, -27, -34, -42, -27, -33, -42, -26, -32, -40, -25, -32, -39, -28, -33, -43, -31, -32, -43, -27, -33, -39, -30, -33, -42, 51, 51, 51, -27, -32, -46, -27, -31, -45, -46, -54, -61, -29, -39, -45, -32, -37, -47, -32, -36, -45, -31, -39, -49, -31, -38, -51, -31, -35, -42, -31, -34, -45, -30, -36, -47, -29, -36, -41, -30, -34, -42, -27, -31, -43, -29, -35, -41, -29, -34, -47, -27, -33, -47, -30, -34, -48, -30, -35, -46, -29, -34, -50, -30, -36, -50, -28, -36, -47, -26, -35, -42, -27, -36, -46, -30, -32, -43, -28, -32, -41, -29, -33, -42, -30, -34, -39, -29, -35, -43, -28, -33, -42, -28, -31, -45, 56, 56, 56, -28, -32, -41, -27, -32, -39, -50, -55, -59, -30, -37, -51, -32, -37, -52, -30, -36, -46, -31, -37, -45, -30, -37, -47, -32, -37, -48, -32, -35, -46, -30, -33, -50, -29, -34, -47, -27, -33, -43, -30, -33, -49, -29, -34, -46, -30, -34, -48, -27, -33, -46, -30, -34, -43, -29, -36, -48, -29, -34, -54, -28, -34, -46, -29, -34, -47, -28, -34, -44, -28, -34, -46, -29, -33, -46, -28, -35, -43, -28, -34, -45, -26, -34, -44, -25, -32, -44, -28, -33, -43, -28, -32, -46, 60, 60, 60, -27, -31, -46, -27, -31, -42, -46, -53, -60, -31, -38, -44, -32, -39, -47, -32, -37, -47, -31, -37, -49, -31, -37, -48, -30, -36, -44, -28, -37, -44, -29, -35, -44, -30, -33, -46, -32, -37, -48, -34, -38, -50, -30, -36, -47, -34, -40, -51, -26, -30, -39, -27, -33, -45, -29, -33, -43, -31, -34, -39, -29, -33, -43, -27, -32, -43, -27, -32, -41, -30, -33, -45, -29, -34, -42, -29, -34, -42, -30, -34, -42, -28, -34, -44, -28, -32, -42, -26, -32, -43, -29, -34, -42, 63, 63, 63, -27, -32, -40, -27, -32, -40, -47, -53, -61, -30, -36, -50, -31, -36, -46, -31, -36, -49, -31, -36, -47, -31, -38, -49, -29, -36, -47, -31, -37, -43, -31, -34, -39, -27, -32, -44, -27, -34, -38, -34, -37, -45, -28, -31, -50, -28, -35, -46, -27, -31, -40, -27, -33, -42, -25, -33, -47, -28, -33, -44, -29, -32, -45, -29, -32, -39, -30, -35, -40, -27, -32, -43, -25, -33, -43, -29, -32, -43, -28, -34, -45, -29, -33, -43, -25, -31, -40, -30, -34, -40, -28, -31, -36, 66, 66, 66, -27, -33, -41, -27, -34, -40, -48, -54, -63, -30, -36, -46, -32, -37, -46, -28, -38, -49, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 68, 68, 68, 62, 62, 62, -100, -100, -100, -47, -52, -63, -34, -38, -47, -32, -37, -49, -31, -40, -53, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 70, 70, 70, 62, 62, 62, -100, -100, -100, -48, -53, -60, -32, -37, -49, -33, -37, -45, -30, -37, -50, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 73, 73, 73, 62, 62, 62, -100, -100, -100, -53, -56, -64, -31, -38, -49, -34, -41, -53, -33, -38, -49, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 75, 75, 75, 62, 62, 62, 65, 65, 65, -47, -53, -71, -32, -40, -51, -32, -41, -58, -35, -40, -51, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 51, 51, 51, -82, -88, -83, -24, -31, -25, -47, -54, -64, -33, -38, -53, -34, -40, -51, -32, -40, -50, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -24, -31, -25, -24, -31, -25, -47, -53, -58, -33, -37, -46, -33, -38, -46, -31, -37, -48, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -24, -31, -25, -24, -31, -25, -49, -52, -63, -31, -36, -43, -33, -37, -44, -31, -36, -47, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -80, -86, -80, 50, 50, 50, -24, -31, -25, -49, -55, -61, -35, -40, -54, -33, -39, -50, -32, -37, -44, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 53, 53, 53, -50, -55, -62, -34, -38, -48, -33, -37, -47, -32, -37, -43, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 75, 75, 75, 62, 62, 62, -100, -100, -100, -52, -57, -61, -34, -40, -49, -34, -39, -48, -33, -37, -44, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -119, -119, -119, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 65, 65, 65, 62, 62, 62, -100, -100, -100, -50, -57, -62, -35, -40, -44, -31, -38, -47, -34, -38, -49, -35, -41, -47, -32, -39, -49, 127, 127, 127, -115, -115, -115, -34, -38, -54, -33, -38, -48, -35, -41, -53, -32, -41, -47, -31, -36, -50, -32, -37, -46, -30, -36, -52, -32, -39, -43, -32, -36, -50, -28, -34, -44, -35, -42, -49, -29, -33, -43, -29, -35, -40, -29, -33, -40, -31, -35, -42, -30, -34, -39, -29, -34, -37, -29, -35, -45, -28, -34, -44, -27, -34, -43, -28, -36, -45, 56, 56, 56, -29, -35, -42, -29, -33, -44, -51, -54, -61, -37, -41, -52, -37, -43, -52, -34, -41, -51, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 106, 106, 106, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -111, -111, -111, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -55, -60, -65, -38, -43, -51, -36, -45, -51, -38, -44, -49, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 106, 106, 106, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -111, -111, -111, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -53, -60, -64, -40, -45, -53, -39, -43, -49, -40, -46, -51, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 106, 106, 106, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -111, -111, -111, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 77, 77, 77, 62, 62, 62, -54, -58, -65, -38, -45, -55, -40, -44, -57, -40, -43, -58, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 106, 106, 106, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -111, -111, -111, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 80, 80, 80, 62, 62, 62, -56, -59, -67, -40, -44, -55, -39, -43, -50, -41, -49, -55, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 106, 106, 106, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -111, -111, -111, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 77, 77, 77, 62, 62, 62, -36, -43, -49, -57, -60, -69, -56, -59, -65, -52, -58, -69, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 106, 106, 106, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -111, -111, -111, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 70, 70, 70, 62, 62, 62, -40, -45, -52, -56, -59, -70, -54, -59, -67, -54, -59, -71, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 106, 106, 106, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -111, -111, -111, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, -100, -100, -100, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 62, 62, 62, -41, -46, -52, -56, -63, -68, -58, -64, -70, -58, -62, -76, -57, -62, -74, -58, -63, -72, -55, -61, -71, -54, -60, -68, -56, -62, -69, -52, -58, -68, -52, -58, -65, -52, -57, -61, -51, -55, -56, -51, -57, -61, -53, -57, -67, -52, -57, -63, -53, -55, -64, -52, -55, -62, -51, -55, -66, -49, -54, -59, -52, -54, -63, -50, -56, -68, -51, -55, -64, -51, -56, -69, -47, -55, -63, -48, -54, -65, -49, -55, -63, -52, -56, -60, -52, -57, -63, -52, -57, -71, 57, 57, 57, -54, -59, -68, -45, -51, -64, -60, -67, -78, -56, -62, -71, -60, -65, -75, -59, -65, -74, -57, -63, -71, -55, -61, -71, -53, -57, -66, -52, -58, -66, -52, -58, -67, -53, -58, -69, -54, -56, -65, -51, -57, -67, -52, -56, -64, -50, -56, -60, -50, -55, -58, -49, -55, -59, -51, -54, -64, -49, -54, -63, -49, -53, -63, -50, -54, -66, -49, -55, -66, -51, -55, -65, -51, -56, -67, -49, -54, -64, -49, -56, -64, -50, -57, -67, -52, -58, -64, -52, -57, -65, -53, -59, -71, 51, 51, 51, -51, -56, -66, -43, -50, -65, -61, -65, -81, -58, -66, -83, -59, -67, -80, -59, -64, -78, -62, -69, -74, -56, -62, -66, -52, -58, -63, -53, -58, -62, -52, -54, -56, -50, -55, -64, -49, -54, -63, -51, -56, -65, -50, -55, -65, -53, -58, -62, -51, -55, -58, -50, -54, -62, -48, -52, -65, -51, -56, -62, -49, -54, -62, -52, -58, -63, -49, -53, -64, -50, -53, -61, -49, -54, -60, -50, -54, -60, -49, -54, -60, -51, -55, -66, -49, -56, -69, -52, -60, -65, -52, -56, -63, -49, -55, -62, 78, 78, 78, -43, -48, -73, -63, -69, -72, -55, -61, -74, -59, -62, -74, -58, -63, -68, -58, -64, -67, -55, -60, -69, -54, -57, -65, -54, -59, -61, -51, -56, -64, -53, -57, -62, -53, -58, -62, -50, -56, -62, -53, -55, -66, -47, -55, -59, -50, -55, -61, -50, -53, -59, -47, -54, -59, -48, -55, -65, -50, -56, -67, -49, -52, -60, -50, -54, -63, -50, -55, -65, -48, -54, -61, -48, -54, -64, -52, -56, -64, -49, -54, -62, -53, -60, -70, -56, -60, -69, -52, -59, -71, -52, -55, -70, 80, 80, 80]

model = load_model()
print(get_prediction(model, img_data))